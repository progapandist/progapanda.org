{"version":3,"sources":["../node_modules/svelte/internal/index.mjs","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/common/EventEmitter.ts","webpack:///src/common/services/Services.ts","webpack:///src/common/Lifecycle.ts","webpack:///src/common/buffer/Constants.ts","webpack:///src/browser/services/Services.ts","webpack:///src/common/buffer/CellData.ts","webpack:///src/common/buffer/AttributeData.ts","webpack:///src/common/input/TextDecoder.ts","webpack:///src/browser/Lifecycle.ts","webpack:///src/browser/renderer/atlas/Constants.ts","webpack:///src/browser/Color.ts","webpack:///src/common/Platform.ts","webpack:///src/common/data/EscapeSequences.ts","webpack:///src/browser/renderer/BaseRenderLayer.ts","webpack:///src/common/services/ServiceRegistry.ts","webpack:///src/common/TypedArrayUtils.ts","webpack:///src/common/buffer/BufferLine.ts","webpack:///src/browser/LocalizableStrings.ts","webpack:///src/common/data/Charsets.ts","webpack:///src/common/parser/Params.ts","webpack:///src/common/parser/OscParser.ts","webpack:///src/common/parser/Constants.ts","webpack:///src/common/parser/DcsParser.ts","webpack:///src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///src/browser/ColorManager.ts","webpack:///src/browser/renderer/RendererUtils.ts","webpack:///src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///src/browser/input/Mouse.ts","webpack:///src/browser/RenderDebouncer.ts","webpack:///src/browser/ScreenDprMonitor.ts","webpack:///src/common/Clone.ts","webpack:///src/public/Terminal.ts","webpack:///src/Terminal.ts","webpack:///src/browser/input/CompositionHelper.ts","webpack:///src/browser/Viewport.ts","webpack:///src/browser/Clipboard.ts","webpack:///src/InputHandler.ts","webpack:///src/common/parser/EscapeSequenceParser.ts","webpack:///src/browser/renderer/Renderer.ts","webpack:///src/browser/renderer/TextRenderLayer.ts","webpack:///src/browser/renderer/GridCache.ts","webpack:///src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///src/browser/ColorContrastCache.ts","webpack:///src/browser/renderer/atlas/LRUMap.ts","webpack:///src/browser/renderer/SelectionRenderLayer.ts","webpack:///src/browser/renderer/CursorRenderLayer.ts","webpack:///src/browser/renderer/LinkRenderLayer.ts","webpack:///src/browser/Linkifier.ts","webpack:///src/browser/services/SelectionService.ts","webpack:///src/browser/selection/SelectionModel.ts","webpack:///src/browser/input/MoveToCell.ts","webpack:///src/browser/services/SoundService.ts","webpack:///src/browser/MouseZoneManager.ts","webpack:///src/AccessibilityManager.ts","webpack:///src/browser/renderer/dom/DomRenderer.ts","webpack:///src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///src/common/input/Keyboard.ts","webpack:///src/common/WindowsMode.ts","webpack:///src/browser/services/RenderService.ts","webpack:///src/common/services/OptionsService.ts","webpack:///src/browser/services/CharSizeService.ts","webpack:///src/common/services/BufferService.ts","webpack:///src/common/buffer/BufferSet.ts","webpack:///src/common/buffer/Buffer.ts","webpack:///src/common/CircularList.ts","webpack:///src/common/buffer/BufferReflow.ts","webpack:///src/common/buffer/Marker.ts","webpack:///src/browser/services/MouseService.ts","webpack:///src/common/services/CoreService.ts","webpack:///src/common/services/LogService.ts","webpack:///src/common/services/DirtyRowService.ts","webpack:///src/common/services/InstantiationService.ts","webpack:///src/common/services/CoreMouseService.ts","webpack:///src/common/input/WriteBuffer.ts","webpack:///src/browser/Linkifier2.ts","webpack:///src/browser/services/CoreBrowserService.ts","webpack:///src/common/services/UnicodeService.ts","webpack:///src/common/input/UnicodeV6.ts","webpack:///src/common/services/CharsetService.ts","webpack:///src/public/AddonManager.ts","../node_modules/svelte/index.mjs","webpack://FitAddon/webpack/universalModuleDefinition","webpack://FitAddon/webpack/bootstrap","webpack://FitAddon/src/FitAddon.ts","webpack://WebLinksAddon/webpack/universalModuleDefinition","webpack://WebLinksAddon/webpack/bootstrap","webpack://WebLinksAddon/src/WebLinksAddon.ts","webpack://WebLinksAddon/src/WebLinkProvider.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","main.js"],"names":["noop","identity","x","assign","tar","src","k","is_promise","value","then","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","not_equal","validate_store","store","name","subscribe","Error","callbacks","unsub","unsubscribe","get_store_value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","once","ran","args","call","null_to_empty","set_store_value","ret","set","has_prop","obj","prop","prototype","hasOwnProperty","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","set_now","set_raf","tasks","run_tasks","task","c","delete","f","size","clear_loops","clear","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","document","createElement","element_is","is","object_without_properties","exclude","indexOf","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","stop_propagation","stopPropagation","self","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set_svg_attributes","set_custom_element_data","xlink_attr","setAttributeNS","get_binding_group_value","group","checked","__value","to_number","time_ranges_to_array","ranges","array","start","end","children","Array","from","childNodes","claim_element","nodes","svg","nodeName","j","splice","claim_text","nodeType","claim_space","set_data","set_input_value","input","set_input_type","type","e","set_style","important","setProperty","select_option","select","option","selected","select_options","select_value","selected_option","querySelector","select_multiple_value","map","querySelectorAll","add_resize_listener","getComputedStyle","position","object","tabIndex","win","onload","contentDocument","defaultView","test","navigator","userAgent","cancel","toggle_class","toggle","classList","custom_event","detail","createEvent","initCustomEvent","query_selector_all","selector","parent","body","HtmlTag","constructor","html","u","m","n","t","innerHTML","p","active_docs","active","hash","str","charCodeAt","create_rule","duration","delay","ease","uid","step","keyframes","rule","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","deleted","join","clear_rules","deleteRule","create_animation","params","to","getBoundingClientRect","left","right","top","bottom","easing","start_time","tick","css","running","started","stop","fix_position","width","height","add_transform","transform","current_component","set_current_component","get_current_component","beforeUpdate","before_update","onMount","on_mount","afterUpdate","after_update","onDestroy","createEventDispatcher","setContext","context","getContext","get","bubble","dirty_components","intros","enabled","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","flush","add_render_callback","add_flush_callback","flushing","seen_callbacks","update","pop","fragment","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","config","animation_name","cleanup","go","end_time","invalidate","create_out_transition","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","abs","handle_promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","mount","error","catch","pending","globals","global","destroy_block","lookup","outro_and_destroy_block","fix_and_destroy_block","fix_and_outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","old_indexes","new_blocks","new_lookup","Map","deltas","will_move","did_move","first","new_block","old_block","new_key","old_key","validate_each_keys","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","boolean_attributes","invalid_attribute_name_character","spread","classes_to_add","class","toLowerCase","String","replace","escaped","escape","match","each","items","missing_component","$$render","validate_component","debug","values","console","log","create_ssr_component","bindings","slots","parent_component","render","title","code","add_attribute","boolean","JSON","stringify","add_classes","classes","bind","bound","create_component","claim_component","parent_nodes","l","mount_component","new_on_destroy","destroy_component","make_dirty","fill","instance","create_fragment","prop_values","ready","hydrate","SvelteElement","HTMLElement","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","$destroy","$on","$set","SvelteComponent","dispatch_dev","version","append_dev","insert_dev","detach_dev","detach_between_dev","before","after","nextSibling","detach_before_dev","previousSibling","detach_after_dev","listen_dev","has_prevent_default","has_stop_propagation","modifiers","dispose","attr_dev","prop_dev","property","dataset_dev","dataset","set_data_dev","validate_each_argument","arg","msg","Symbol","iterator","validate_slots","slot","slot_key","warn","SvelteComponentDev","$$inline","$capture_state","$inject_state","loop_guard","timeout","root","factory","exports","module","define","amd","installedModules","__webpack_require__","moduleId","modules","getter","defineProperty","enumerable","toStringTag","__esModule","ns","s","_listeners","_disposed","this","_event","listener","fire","arg1","arg2","queue","EventEmitter","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","IUnicodeService","_disposables","_isDisposed","register","unregister","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","content","fg","bg","combinedData","fromCharData","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","combined","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","getFgColor","getBgColor","codePoint","fromCharCode","codepoint","_interim","decode","startPos","StringToUtf32","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","useCapture","disposed","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","channels","rgb","rgba","toPaddedHex","toString","contrastRatio","l1","l2","toCss","g","toRgba","color","blend","fgR","fgG","fgB","bgR","bgG","bgB","round","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","parseInt","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","ceil","increaseLuminance","min","bgL","fgL","toChannels","isNode","platform","contains","arr","el","isFirefox","isSafari","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","_initCanvas","_charAtlas","_ctx","throwIfFalsy","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","scaledCanvasWidth","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","storeServiceDependency","serviceRegistry","ctor","decorator","arguments","fillFallback","DEFAULT_ATTR_DATA","freeze","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","eraseAttr","deleteCells","replaceCells","subarray","copyFrom","newLine","BufferLine","getTrimmedLength","copyCellsFrom","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","maxLength","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","Params","addSubParam","addParam","newParams","toArray","res","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","canvas","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionOpaque","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","substring","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","clientX","clientY","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","isArray","_core","Terminal","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","UnicodeApi","textarea","BufferNamespaceApi","buffers","markers","blur","focus","columns","_verifyIntegers","open","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","registerLinkProvider","linkProvider","registerMarker","cursorYOffset","addMarker","hasSelection","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","ydisp","ybase","getLine","BufferLineApiView","getNullCell","_buffers","_onBufferChange","_normal","BufferApiView","normal","_alternate","alt","onBufferActivate","alternate","_line","getCell","startColumn","endColumn","registerCsiHandler","addCsiHandler","registerDcsHandler","addDcsHandler","registerEscHandler","addEscHandler","registerOscHandler","addOscHandler","provider","unicodeService","versions","activeVersion","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onBinary","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","UnicodeService","_charsetService","CharsetService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_renderService","_customKeyEventHandler","insertMode","bracketedPasteMode","_userScrolling","InputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","linkifier","Linkifier","linkifier2","Linkifier2","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","preventScroll","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_document","dir","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","altKey","shift","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","onProtocolChange","events","logLevel","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","scroll","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","wasModifierKeyOnlyEvent","charCode","which","_soundBell","playBellSound","_visualBell","clearTimeout","_visualBellTimer","setTimeout","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","term","termName","handleTitle","userScrolling","force","cancelEvents","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","diff","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","dimensions","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","concat","pt","cursorStyle","cursorBlink","_terminal","_unicodeService","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestRefreshRows","_onRequestReset","_onRequestBell","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setIconName","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","state","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","clearRange","chWidth","charset","wraparoundMode","wraparound","curAttr","bufferRow","markDirty","wcwidth","ch","_eraseAttrData","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","setgCharset","applicationKeypad","activeEncoding","isCursorHidden","activateAltBuffer","activateNormalBuffer","_extractColor","accu","cSpace","advance","subparams","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","getService","w","toFixed","h","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","table","setDefault","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","handlersEsc","jj","nextRendererId","_screenElement","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_onRequestRefreshRowsEvent","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","cursorX","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","hasNext","_doLinkifyRow","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","newWindow","opener","location","href","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","rpt","resetStartingRow","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","_announceCharacters","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","triggerBinaryEvent","LogLevel","optionsKeyToLogLevel","DEBUG","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","_entries","entries","service","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","down","up","drag","move","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","_innerWrite","startTime","_linkProviders","_linkCacheDisposables","providerIndex","mouseService","renderService","_lastMouseEvent","_positionFromMouseEvent","_lastBufferCell","_currentLink","_linkAtPosition","_askForLink","providerReplies","linkProvided","provideLink","link","hasLinkBefore","_handleNewLink","currentLink","activate","_linkLeave","_linkHover","scrollOffset","hover","leave","sameLine","wrappedFromLeft","wrappedToRight","activeElement","hasFocus","_providers","_onChange","defaultProvider","UnicodeV6","_activeProvider","num","BMP_COMBINING","HIGH_COMBINING","ucs","mid","bisearch","charsets","glevel","_addons","terminal","loadedAddon","_wrappedAddonDispose","fit","dims","proposeDimensions","core","parentElementStyle","parentElementHeight","getPropertyValue","parentElementWidth","elementStyle","availableHeight","availableWidth","FitAddon","strictUrlRegex","handleLink","_options","_useLinkProvider","_linkProvider","WebLinkProvider","_linkMatcherId","WebLinksAddon","_regex","LinkComputer","computeLink","startLineIndex","endX","endY","_translateBufferLineToStringWithWrap","lineWrapsToNext","prevLinesToWrap","lineString","bundleURL","getBundleURLCached","getBundleURL","err","matches","stack","getBaseURL","url","bundle","require","updateLink","newLink","cssTimeout","reloadCSS","links","app","App"],"mappings":"A6FAA,ACAA,IDAI84E,ACAAQ,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;C7FAA,AqFAA,AGAA,SxFA2Cr5D,AqFAAA,AGAAA,ExFAMC,AqFAAA,AGAAA,GxFChD,AqFAsB,AGAA,GxFAA,cqFAZC,AGAAA,GxFAAA,MqFA0C,AGAA,GxFAA,cqFAXC,AGAAA,GxFAAA,IqFCxCA,AGAAA,GxFAAA,IqFAOD,AGAAA,GxFAAA,KqFAUD,AGAAA,GxFAAA,CqFCQ,AGAA,QxFArB,GAAqB,QqFAXG,AGAAA,QHAyBA,AGAAA,GxFAzBA,IqFAgCC,AGAAA,IxFAPD,AqFCvCA,AGAAA,OxFD8CC,AqFCvC,AGAA,GHAIJ,AGAAA,CxFAXG,EqFC0B,AGAA,KxFDnB,GAAIH,OACP,CACJ,CqFDcC,AGAAA,GxFCVve,EAAIse,GqFARC,AGAAA,CxFCA,IAAI,GqFDc,AGAK,CxFCfpc,KAAKnC,GAAuB,AqFDdse,IAEtBD,CGF2BC,CHEZ,GGAfD,EAAoB,IHADC,ErFDKC,EqFP1B,CASG1a,KrFF8C0a,AwFCvBD,EHCf,EGTX,CASGza,GxFFwDwa,GAAMlc,EqFGjE,AGDW,CxFF2DnC,EAAEmC,IAPxE,A,CASG0B,GwFCH,KxFDW,E,CsFRT,IAAI8a,EAAmB,EtFSzB,CsFNE,EGHA,IAAIA,A,EAAmB,CHGdC,EAAoBC,AGA7B,GHGC,GAAGF,CrFNJ,CqFMqBE,CGHZD,ExFHLD,AqFOF,AGJ2BE,ExFHN,CwFMtB,ExFHD,CwFGIF,CHCKA,CGDYE,CHCKA,EGAxB,CHAkCN,ErFJ3BK,EAAoBC,EwFIpBF,CxFDR,CqFIA,AGHyBE,ExFDtBF,CwFCgCJ,CxFDfM,AqFIhBL,EAASG,CrFHZ,CqFG6BE,GAAY,AGA1C,CHCC1c,ErFJOwc,AqFIJE,CGDAL,CxFHqBK,AqFKxBtE,CGFYoE,ExFHsBJ,AqFK/B,AGF0BM,EHG7BN,CGHyC,CACzCpc,EAAG0c,ExFDJ,AwFECtE,EHCS,CGDN,CxFFAiE,CwFGHD,CxFHYI,AqFab,ErFb8BE,GAAY,CACzC1c,CqFMD2c,AGJU,CxFFND,CqFMIA,CrFLPtE,CwFWD,CHNkBxX,CrFLd,EACHwb,EqFIsBC,CGAvBM,CHA8BP,CGAtBM,GxFJE,AwFIQ9b,IxFMlB,AqFNuCyb,CGAhBA,CHAwBA,CGAjBD,CHAwBA,GrFAtDO,EAAQD,EwFA+BL,CxFArBzb,AqFA6C6b,CGAhBJ,EHG/CA,AGHsDD,ExFA/BC,AqFGhBjE,ErFHuBgE,CqFGnB,EAGJC,CGNwDI,CHMjDL,EGHdC,CxFHuCA,CwFGhCjE,CxFHwCiE,EAAOD,AwFG3C,CH6DZ,CG1DQC,EAAOD,IxFNiDK,AqFWhEA,EAAoBxR,CrFRnBoR,CqFQuBM,AGqDxB,CxF7DQvE,CqFWRqE,ErFXY,AqFWQna,ErFRZ+Z,AqFQgBG,CGHxBC,CxFLeL,AqFWfK,CGNoBxR,CHMAlH,CGNI4Y,CHMA,CGHxBF,EAAoBna,CxFkDpB,CwFlDwBka,EAGxBC,EHAiCL,AGAbrY,ExFNpB0Y,AqFM0Cve,AGAlB,ExFNJ+M,AqFM4B2R,ErFNxBD,CqFOnBF,CrFJLA,CqFIyB7K,CrFJLtP,CqFIO8Z,AGDMA,CxFHTI,CqFIYte,AGDMA,CxFA1Cue,CwFAgDG,CxFA5B7Y,CqFElB1G,CrFFsB,AwFCnBof,EAAoB7K,EAAEwK,EHClBS,AGD2B3e,GxFDHke,CwFE/B/e,CxFFwCa,EAAM0e,GAC3CH,CwFCII,CxFDgBjL,EAAEwK,CqFCHA,CrFDYle,CqFCHA,EAAM,CrFArCb,AqFAuCyf,MGAjBV,CxFAfS,CwFAwB3e,EAAM,CAAE4e,CHAY,EAAMpN,IAAKkN,IrFAxCR,CqFKxBK,AGLqD,CxFApBve,CqFKboT,AGLuC5B,CxFApB,CAAEoN,AqFKjB,EGLwCF,KAKhEH,EHAiCL,AGAb9K,EAAI,CxFL6B,AqFM/B,ErFNqC5B,IAAKkN,EwFK/BR,GxFAjCK,AwFCsB,ExFDFnL,EAAI,KqFCbgK,IrFDsBc,GACX,CqFAed,GGA1BA,IHAiCyB,IGAPzB,OAAOyB,CxFAjCzB,CqFCTje,OrFDmCie,AqFC5BuB,IGAPxf,GxFD0C0f,IwFCnCF,IHAeT,EAASd,GrFA/Bje,IqFAsC0f,EGAhBX,CxFAfS,CwFAwBvB,OAAOyB,CHAa,CAAEvgB,KrFA/B4f,CqFAsC,CrFA7Bd,GwFAoB,CAAE9e,GxFAfugB,GqFEvC1f,AGF6D,OHEtDwf,ErFF6C,CAAErgB,CwFEtDa,KxFF6D,EwFEtDwf,IHAeT,EAAS,GrFA/B/e,MwFAsB+e,CxFAfS,CwFAwB,EHAc,CAAErgB,OAAO,GGAT,CxFAvB4f,AwFAyB5f,CHQhDigB,CrFRgC,CqFQZtR,EAAI,EGR+B,KAQvDsR,EHAiCjgB,AGAb2O,CxFR0B,CAAE3O,AqFQR0c,AGAhB,GHEvB,GADU,CrFT4C,CqFSnDA,CGD6B1c,EAAO0c,CxFAxCuD,AqFCcjgB,ErFDM2O,AqFCEsR,AGCrB,ExFFuB,AqFCkBjgB,CGA/B,EAAP0c,CHCO,EAAPA,CGDU1c,CHCA,CrFFmBA,AwFCXigB,ExFDkBvD,AwFCE1c,GxFCzC,CqFAoBA,AGAV,ExFDA,AqFEV,AGDG0c,ExFDAA,AwFCU,CHCF,EAAPA,CrFFS1c,EAAQigB,AqFEa,CGDdjgB,CxFDqBA,CwFEzC,GxFDU,AwFCC,ExFDR0c,AwFCCA,ExFDS,CwFCqB,MxFDd1c,AqFCIA,ErFAxB,CqFA8CA,ErFAnC,CqFA4CA,CrFAnD0c,CqFAyD8D,ErFA3B,CwFAVxgB,GAAsBA,GAASA,EHAkB,AGAZwgB,OHAmBxgB,CrFAxDA,CqFCxB,ErFD8CA,AwFA2B,EHCrEygB,CrFDmDzgB,CqFC9Ca,CrFDoD2f,EwFAmBxgB,EAChF,EHAgBc,EGAZ2f,EAAK5f,CxFDgE,EqFClD,IGAPC,CxFDgEd,CqFIhF,CrFHA,EqFCAigB,ErFDIQ,AqFCgB3L,AGDG,ExFAdjU,AqFCa4f,GACtB5f,CGCA,GxFHgBC,AwFChBmf,EAAoBnL,CHCbuL,CGDeI,GxFDC,AwFEvB5f,MxFCA,CwFDOwf,ExFDPJ,EAAoBnL,AqFCE2L,ErFDAA,AqFCI,GrFA1B5f,MwFAsB4f,CxFAfJ,AqFA8B,CAAEC,AGAb,UAAW,CAAEA,CHAY,ErFA7BG,AqFAmCzgB,ErFA/B,IqFAsCA,GGAb,CHCzC,CGD+CA,CxFApB,AqFClC0c,CrFDoC4D,EqFCR,EGDiCtgB,IACtD,EAAP0c,ExFDgD,CwFCpB,CxFD0B1c,KqFCnCA,CrFD0CA,CqFCvB,GrFA/B,CqFAmC,CrFA1C0c,GAA4B,AqFAkB/S,CGA3B3J,EAAmB,EHAeA,EAAOigB,AGAlB,EHAsC1Y,EAAEkZ,AGApC9W,EHAwCA,EAAK,CGAtC3J,CxFAlCA,CwFAyCigB,CxFAtB,CwFA0C1Y,EAAEkZ,CxFAxC,CqFA0D9W,AGAdA,EAAK,CxFA7CA,AqFA6D,KrFAtD3J,EAAOigB,AqFAsDjgB,CGAd2J,CxFApBpC,AqFAwCoC,ErFAtC8W,AwFAyB,ExFArB9W,AqFA0C4R,ErFArC,GqFA0C,AGAnBvb,EAAM2J,GHAmBA,CrFAvCA,AwFA4B4R,GxFArB,AqFC9G,EGDwI,KxFAnBvb,AqFC9GygB,AGDuI9W,ExFAnBA,CqFK5HsW,CGJC,CHImBvR,CrFLgH6M,CqFK5G,IrFLiH,AwFCjIkF,GAIRR,ExFL+ItW,AqFK9GkW,AGAbnR,EAAI,CHCvB,CrFLA,GqFKI0R,EAASP,ErFLNY,AwFIyBZ,CHCTA,ErFDxBI,AqFC+BO,AGA9B,ExFDmB9R,EAAI,AwFCnB0R,EAASP,GAAUA,EHCtB,AGD6BW,ExFDEX,GAChC,IAAIO,EAASP,AqFCY,AGAxB,GxFDsBA,EAAOW,EqFCEX,EAAgB,EGAvB,KxFAxB,EqFCA,AGD+BA,EAAgB,OxFAvB,EqFCM,AGA9B,KxFD+BA,EAAgB,AqFCVA,GAEtC,CGF+B,KxFA9B,CqFCDI,CGDsCJ,CHClBtY,EAAE6Y,AGCtB,EHD8B,IrFDC,AqFCIA,CGAnCH,EHCOG,AGDa7Y,EAAE6Y,CHKvBH,CrFNuCJ,AwFCR,CHKXzK,ErFJnB,AqFIuB,CGLYgL,GAC5BA,GxFDPH,AwFKDA,ExFLqB1Y,AqFKYyF,AGAboI,ExFLGgL,AqFKkB7B,AGAjB,ExFLO,CqFKsB,GrFLjB6B,GAC5BA,AwFIyBpT,CHA2BnM,CGAnB0d,CxFAzC0B,EAAoB7K,AwFAiC,ExFA7B,CqFA2CxQ,IGAP/D,IxFA3BmM,EAAQuR,AqFAoC1Z,CGAVD,ExFAd,OAAO/D,CwFAiBgE,IHAeT,ErFAzBQ,GqFA8BoI,EAAQuR,IAGzG0B,AGH4F7b,CxFAfS,CqFGzDgK,EAAI,CGHyE7B,EHO1FiT,AGPkG1B,EHO9E0B,EAAoBS,AGJ/CT,EHImD,AGJ/BpR,EAAI,CxFHoEzK,A,EwFOrF6b,EAAoBA,CxFPsEjT,CwFOlD0T,CxFP0DnC,CwFOtD,GxFJnD0B,A,EAAoBpR,EAAI,GAIjBoR,EAAoBA,EAAoBS,EAAI,I,oDsF/DrD,IAGA,OGhBA,MHmBE,KGCI02D,EAAiB,IxFLvB,AwFK2BlhB,GHuD3B,IGvDkCxrD,GHCzB,YAAAkqE,QrFLC,CqFKR,IrFLQj0D,KqFKQ01D,GACdx1D,GrFNsC,EqFMjCk9B,CrFJC,KAAAn9B,IqFIWy1D,GAGZ,IrFPsB,EAwC/B,MqFjCSj4D,CrFLP,OqFKA,aAEO,ErFPI,UqFOJo4D,IAAP,MrFPgB,C,IAAhB,AqFQE,IAAMC,EAAO51D,KAAK61D,WrFWlB,OAlBK71D,EqFQL,GrFRUC,AqFQL21D,GAAS51D,KAAKk9B,CrFPjBl9B,KAAKC,IqFOP,CAKA,ErFZgB,EqFYV61D,EAAa91D,KrFZFE,AqFYOg9B,GrFEpB,OAbA,AqFW+B9Z,ErFX1BtjB,IqFcLE,KAAKk9B,ErFdWx7C,KAAKwe,GACF,AqFaJ0Q,CrFZbrT,MqFYsBq4D,ErFZb,AqFYkBhlD,MAAQ5Q,KrFXjC,AqFWsCk9B,IrFXjC,EAAKn9B,IqFWsC6T,MrFV9C,CqFUuDgiD,EAAKhiD,CrFVvD,IAAIjxB,EAAI,AqFWrBmzE,ErFXwBnzE,AqFWnBgpC,ErFXuB,EAAK7rB,WAAWpd,AqFWxB4C,OrFXgC3C,CqFYpDqd,GrFXU,EqFWLk9B,CrFXS,EAAKp9B,OqFWJiR,IrFXepuB,GqFWRizE,AGjB5B,ExFM2C11D,AqFWV0T,ErFTf,GqFSqBgiD,EAAKhlD,AGjBnC4lD,EAAW9uE,EAAmB+tD,GxFOrB,AwFNhB,ExFMqB31C,AqFcd,EGpBDo2C,EAAY7xD,OxFMcmG,AwFNPo6B,CHoBlBixC,MrFdgClzE,AwFLnCuzD,ExFKsC,CwFJxCA,EAAUC,IxFcHn2C,GqFIT,AGlBqB,ExFcPC,GwFbZi2C,EAAUE,G,CHkBV,GAAKp2C,EGlBcq2C,GHkBTnZ,EGlBgBuY,GAE1B97C,MHoBKqG,EGpBG1B,GHoBE4+B,EGpBG,KxFcR,GqFMe59C,SrFNf6gB,AqFM2BH,KrFNlC,AqFMuCk9B,SrFN3B98B,CqFMqC9gB,CrFN5B+gB,GAEnB,IADA,AqFKuD6mD,IrFLjD5mD,EAA2B,GACxB3d,EAAI,EAAGA,CqFIhB,CrFJoBqd,AqFSpB,AGrBJ,IHqBU81D,CrFTmBh2D,CqFSNE,KAAKk9B,KrFTYx6C,CwFPtC,IHgBqC0gC,ErFTSzgC,IAC1C2d,AqFUIy1D,CGjBEr7C,CxFOAh5B,AqFUmB2C,CGhBnBoyE,EACAC,ExFKK12D,EqFUqB/T,GrFVhB6T,CwFPV,IAAA4a,MxFOqB/3B,AwFPrB,GHiB2Cqd,CrFRnD,IAASrd,AqFQ+Cu6C,AGhBhD,ExFQK,EAAGv6C,AwFRR8zE,ExFQYn2D,EAAM5d,EqFQwCpD,AGhB1D,KxFQ0BqD,GqFQwCukE,CrFPxE5mD,AwFRM,ExFQA3d,EwFRA+zE,CxFQGnzE,MwFRH,GHgBFyyE,AGlBE,CxFUQ3zE,CqFQY4lB,CrFRD7H,EAAMC,AwFVzBqa,IxFcH,EqFIgCq7C,EAAmBE,GGjBhD,KxFaH14D,AwFbGk5D,QxFaV,CqFI2E,EGhBjE,KAAAC,GxFaJ12D,CqFIEk2D,EAAqB1zE,ErFJlBsd,GqFIuBrd,IAAI,EAAGwlB,EGfvCjI,ExFYEA,GwFZGy2D,ExFYE32D,AqFGyCi2D,EAAmBE,KGfrDvhB,IxFYIhyD,OAAS,AwFZA,CHeyD,CGMxF,CxFPIsd,KAAKD,CwFXA,GHaCo2D,EAAe9xE,KrFFJ,EqFEW4H,AGbvB8nE,CxFaT,EA3CA,GAAa,EAAAxzD,CwF8BX,QHa+CP,CGb/Bw1D,GACdx1D,CHYkDk9B,E,EGZ7CA,MHYuD59C,IGZ3Ck2E,EAEbx1D,GHmBEo2D,EAAkBJ,AGnBfU,GHYFzuD,SAASkuD,EAAaF,IGZA,aHYiB,YGZSj2D,IHa7CiI,CGbkDi1B,QHazCi5B,EAAaF,AGZ9Bj2D,CvF/CN,IuF+CW22D,QvF7CE,EAAAn2D,EoFyDwC,EGZ1BR,KAAKk9B,MvF7CF,EAAAz8B,EuF6CY0kB,GHmBhCkxC,EAAiBH,GANdjuD,MpF1DiD,GoF0DxCkuD,EAAaF,EGb4B,IAAI,EAAAW,IvF9BtD,EAAAl2D,GoF2CuC,OGb+BV,KAAKk9B,GvF9BvD,EAAAz8B,CoF4CrBwH,IGduFsuD,EAAgBv2D,GHc9Fm2D,EAAaF,AGdsFv7C,IvF9BpD,OuFiC9D1a,KAAK62D,CHWwC,OpFbtC,EAAAl2D,KuFEgBX,IHgBuC81D,CGhBlC54B,CHgBuC/P,EpFlB7C,EAAA1sB,KoFkBsD83B,AGhBzBxT,WvFFC,IoFuBtD,KGrByEwxC,CHiBxD,CACf3iD,AGlBuF5T,IvFkChF,CoFhBDxd,AGlBsFk4B,CvFkCrF9Z,IoFhBIne,IAzDI,AGuCuFud,EHkBzExd,GGlB8Ei0E,EHkBzEr8B,CpFgBT,EAAA35B,GoFhBe41D,EAAiBP,CGdtD,CHc2DnqC,SpFgBJ,EuF9BvDpuB,IHc0E87B,IGdjF,OHc4F/X,CpFwCjF,EAAAzgB,C,WuFrDmBxe,GHc1BuuB,CGdE5Q,CvFqDwB,EAAAS,CoFvCpBje,CGdCq0E,IHcIp0E,IAzDI,EAyDcD,IpFuC+B,CoFvC1B43C,MAAMg8B,AGdkB/zE,EHcAyzE,EAAKnqC,AGdxB3rB,KAAKk9B,GvF2GrC,EAAAp8B,KoF7FuEu4B,CGb9Er5B,KAAKk9B,KHaoF3b,KGb1E0D,CvF0GgB,EAAAxkB,coFzFrC,EpFyF4E,AoFpJ5E,GAAa,AG0C8BT,EH1C9Bs2D,GG0CmCO,gBvF0HnC,AuFvHS,EvFuHT91D,MuFvHT,EAAAf,IvFuHuB,CuFvHlB22D,CvFuHkBl2D,gBAA6B,IuFvHlC,SAAElD,CvFiIX,EAAAyD,QuF/Hb,EA/BA,GAAa,EAAA81D,CvF8JkB,EAAAr2D,c,EAAiC,kBAkHnD,EAAAQ,gBAAkB,EAAAR,gBAAiC,mB,GwF/ShE,iBAEE,WACmBy8B,EACA65B,EACAr8C,GAFA,KAAAwiB,YACA,KAAA65B,SACA,KAAAr8C,IvFDrB,OuFSA,OAHE,GvFFA,SuFEAg5C,IvFLU,KAAAxyD,GuFKV,SAAYhV,CvFL4B,CuFKG3K,EvFJjC,CuFKRA,EAASy1E,EvFLD71D,AuFKc81D,YAAY/qE,CvFLH,CuFKa8T,CvF4BhD,IuF5BqD+2D,GvFG5C,IuFHoD/2D,KAAKk9B,GvFGzD3/B,OuFHoEyC,CvFG3E,IuFHgF0a,OvFI9E1a,KAAKmB,AuFFT,EAbA,GAAa,EAAAy1D,MvFeU,EACnB52D,KAAKkB,KuFDT,QvFCsB9gB,SAAQ,SAAAsG,GAAK,EuF0FnC,KvF1FmCA,EAAE6W,AuFArB,EAAA05D,WvFCZj3D,CuFDF,IvFCOkB,KuFDmBhV,EAA+B84B,EAAewwC,EAAoB7tE,EvFCxEjF,CuFOlB,IAPA,EvFA2B,EuFIvByW,CvFGC,CuFPCi8C,EAAM,IAAIC,KvFOXj0C,EuFPkB4jB,EAAMswB,KvFO/B,GuFPwCtwB,EAAMuwB,IvFOP7uD,GACrCsZ,AuFRqD,IAAM,CvFQtDkB,IuFNC,SvFMYxf,KAAKgF,IAQlB,YAAA2a,WAAP,SAAyC3a,GACvC,AuFfOlH,EAAA,EvFeDqW,EAAQmK,CuFfDk3D,EAAA,EvFeMh2D,GuFZfs0C,GAAe,EAEiB,KvFUJvuD,GuFVxBkS,EAAQi8C,EAAIW,CvFUoBrvD,IACzB,AuFXUlH,IvFWrBqW,CuFXsC,CACxC,CvFWAmK,GuFXM5Y,EvFWD8Z,AuFXQ/H,EAAM,GACnB,IAAK/R,EAAM,CAGTuS,CvFOgBnP,OAAOqL,AuFPf+D,EvFOsB,EuFPlB,EvFUpB,EAnCA,GAAsB,EAAA0H,c,yBuF0Bd,MASF,GAFAk0C,EAAch2D,EAAKyH,QAAQG,EAAMouD,EAAc,GAC/CJ,EAAIM,UAAYF,EAAcpuD,EAAK1E,OAC/B8yD,EtFzCG,AsFyCW,EtFzCXj0C,AsF2CL,MAMF,IAHA,ItF9CuB,AsF8CnB41D,EAAO3hB,EtF7CJ,AsF6CkBpuD,EtF7ClBoa,AsF6CuB9e,OAC1B00E,EAAOF,EAAiB,EtF9CN,AsFgDfC,EAAO3B,EtFhDqB,AsFgDZ5hD,EtFhDYrS,IsFiDjC41D,GAAQ3B,EAAS5hD,KACjBwjD,CtFlDkD,EAE7C,CsF8DP,CtF9DO31D,KsF8DA,CAAEsf,MAXK,CACZl3B,MAAO,CACLhL,CtFrD0B,CsFqDvB22D,CtFpDA,CsFoDc,CtFpDd9zC,CsFqDHiQ,EAAGulD,EAAiB,GAEtBptE,IAAK,CACHj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,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAA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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: any;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n  readonly charsets: ReadonlyArray<ICharset>;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: any;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    return {\n      css,\n      rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selection);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi { return new BufferNamespaceApi(this._core.buffers); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _buffers: IBufferSet) {\n    this._normal = new BufferApiView(this._buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._buffers.alt, 'alternate');\n    this._buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._buffers.active === this._buffers.normal) { return this.normal; }\n    if (this._buffers.active === this._buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService, ICharsetService, IUnicodeService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2 } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _charsetService: ICharsetService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n  public unicodeService: IUnicodeService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public insertMode: boolean;\n  public bracketedPasteMode: boolean;\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreService.onBinary(e => this._onBinary.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n    this._renderService?.dispose();\n    this._customKeyEventHandler = null;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  private _setup(): void {\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.insertMode = false;\n    this.bracketedPasteMode = false;\n\n    this._userScrolling = false;\n\n    if (this._inputHandler) {\n      this._inputHandler.reset();\n    } else {\n      // Register input handler and refire/handle events\n      this._inputHandler = new InputHandler(this, this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService, this._instantiationService);\n      this._inputHandler.onRequestBell(() => this.bell());\n      this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end));\n      this._inputHandler.onRequestReset(() => this.reset());\n      this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n      this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n      this.register(this._inputHandler);\n    }\n\n    if (!this.linkifier) {\n      this.linkifier = new Linkifier(this._bufferService, this._logService, this.optionsService, this.unicodeService);\n    }\n    if (!this.linkifier2) {\n      this.linkifier2 = new Linkifier2(this._bufferService);\n    }\n\n    if (this.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  private _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          disposables.forEach(d => d.dispose());\n        }\n      };\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          this._renderService?.clear();\n          this._charSizeService?.measure();\n          break;\n        case 'cursorBlink':\n        case 'cursorStyle':\n          // The DOM renderer needs a row refresh to update the cursor styles\n          this.refresh(this.buffer.y, this.buffer.y);\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n        case 'minimumContrastRatio':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          this.viewport?.syncScrollArea();\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            this._accessibilityManager?.dispose();\n            this._accessibilityManager = null;\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            this._enableWindowsMode();\n          } else {\n            this._windowsMode?.dispose();\n            this._windowsMode = undefined;\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.optionsService.onOptionChange(e => this._colorManager.onOptionsChange(e));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager.colors, this.screenElement, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager.colors, this.element, this.screenElement, this._viewportElement, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: Event) => void } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable, IWindowOptions } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, IInstantiationService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IRenderService } from 'browser/services/Services';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _windowTitleStack: string[] = [];\n  private _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    private _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _instantiationService: IInstantiationService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 't'}, params => this.windowOptions(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => { this.setTitle(data); this.setIconName(data); }));\n    //   1 - icon name\n    this._parser.setOscHandler(1, new OscHandler((data: string) => this.setIconName(data)));\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.addCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): void {\n    this._onRequestBell.fire();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): void {\n    this._charsetService.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): void {\n    this._charsetService.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._terminal.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._terminal.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._terminal.viewport?.syncScrollArea();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._terminal.viewport?.syncScrollArea();\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied from in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined. (no support for newer underline styles)      | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly  underlined.                                      | #N      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.viewport?.syncScrollArea();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): void {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    const rs = this._instantiationService.getService(IRenderService);\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (rs && second !== 2) {\n          console.log(rs.dimensions);\n          const w = rs.dimensions.scaledCanvasWidth.toFixed(0);\n          const h = rs.dimensions.scaledCanvasHeight.toFixed(0);\n          this._coreService.triggerDataEvent(`${C0.ESC}[4;${h};${w}t`);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        if (rs) {\n          const w = rs.dimensions.scaledCellWidth.toFixed(0);\n          const h = rs.dimensions.scaledCellHeight.toFixed(0);\n          this._coreService.triggerDataEvent(`${C0.ESC}[6;${h};${w}t`);\n        }\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop());\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop());\n          }\n        }\n        break;\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): void {\n    this._windowTitle = data;\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): void {\n    this._iconName = data;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._terminal.viewport?.syncScrollArea();\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): void {\n    this._parser.reset();\n    this._onRequestReset.fire();\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._charsetService.setgLevel(level);\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this._transitions.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    readonly linkifier: ILinkifier,\n    readonly linkifier2: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService readonly coreService: ICoreService,\n    @ICoreBrowserService readonly coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, linkifier, linkifier2, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRefreshRows, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRefreshRowsEvent>,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n\n    linkifier2.onLinkHover(e => this._onLinkHover(e));\n    linkifier2.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRefreshRowsEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRefreshRows = new EventEmitter<IRequestRefreshRowsEvent>();\n  public get onRequestRefreshRows(): IEvent<IRequestRefreshRowsEvent> { return this._onRequestRefreshRows.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier.onLinkLeave(e => this._onLinkLeave(e));\n\n    this._linkifier2.onLinkHover(e => this._onLinkHover(e));\n    this._linkifier2.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.removeChild(this._rowContainer);\n    this._screenElement.removeChild(this._selectionContainer);\n    this._screenElement.removeChild(this._themeStyleElement);\n    this._screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selection.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRefreshRows(e => this.refreshRows(e.start, e.end));\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, ICharset } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  origin: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent } from './Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport class Linkifier2 implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  private _currentLink: ILink | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n\n  constructor(\n    private readonly _bufferService: IBufferService\n  ) {\n\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this._element.addEventListener('mousemove', this._onMouseMove.bind(this));\n    this._element.addEventListener('click', this._onMouseDown.bind(this));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    if (this._currentLink) {\n      // Check the if the link is in the mouse position\n      const isInPosition = this._linkAtPosition(this._currentLink, position);\n\n      // Check if we need to clear the link\n      if (!isInPosition) {\n        this._clearCurrentLink();\n        this._askForLink(position);\n      }\n    } else {\n      this._askForLink(position);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition): void {\n    const providerReplies: Map<Number, ILink | undefined> = new Map();\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      linkProvider.provideLink(position, (link: ILink | undefined) => {\n        providerReplies.set(i, link);\n\n        // Check if every provider before this one has come back undefined\n        let hasLinkBefore = false;\n        for (let j = 0; j < i; j++) {\n          if (!providerReplies.has(j) || providerReplies.get(j)) {\n            hasLinkBefore = true;\n          }\n        }\n\n        // If all providers with higher priority came back undefined, then this link should be used\n        if (!hasLinkBefore && link) {\n          linkProvided = true;\n          this._handleNewLink(link);\n        }\n\n        // Check if all the providers have responded\n        if (providerReplies.size === this._linkProviders.length && !linkProvided) {\n          // Respect the order of the link providers\n          for (let j = 0; j < providerReplies.size; j++) {\n            const currentLink = providerReplies.get(j);\n            if (currentLink) {\n              this._handleNewLink(currentLink);\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  private _onMouseDown(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink, position)) {\n      this._currentLink.activate(event, this._currentLink.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.range.start.y >= startRow && this._currentLink.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink, this._lastMouseEvent);\n      this._currentLink = undefined;\n      this._linkCacheDisposables.forEach(l => l.dispose());\n      this._linkCacheDisposables = [];\n    }\n  }\n\n  private _handleNewLink(link: ILink): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(link, position)) {\n      this._currentLink = link;\n      this._linkHover(this._element, link, this._lastMouseEvent);\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRender(e => {\n          this._clearCurrentLink(e.start + 1 + this._bufferService.buffer.ydisp, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n\n    this._onLinkHover.fire(this._createLinkHoverEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined));\n    element.classList.add('xterm-cursor-pointer');\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n\n    this._onLinkLeave.fire(this._createLinkHoverEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined));\n    element.classList.remove('xterm-cursor-pointer');\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  serviceBrand: any;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public charsets: ICharset[] = [];\n  public glevel: number = 0;\n\n  public reset(): void {\n    this.charset = undefined;\n    this.charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","export { SvelteComponentDev as SvelteComponent, afterUpdate, beforeUpdate, createEventDispatcher, getContext, onDestroy, onMount, setContext, tick } from './internal';\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (<any>this._terminal)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (<any>this._terminal)._core;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebLinksAddon\"] = factory();\n\telse\n\t\troot[\"WebLinksAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ILinkMatcherOptions, ITerminalAddon, ILinkProvider, IDisposable } from 'xterm';\nimport { WebLinkProvider } from './WebLinkProvider';\n\nconst protocolClause = '(https?:\\\\/\\\\/)';\nconst domainCharacterSet = '[\\\\da-z\\\\.-]+';\nconst negatedDomainCharacterSet = '[^\\\\da-z\\\\.-]+';\nconst domainBodyClause = '(' + domainCharacterSet + ')';\nconst tldClause = '([a-z\\\\.]{2,6})';\nconst ipClause = '((\\\\d{1,3}\\\\.){3}\\\\d{1,3})';\nconst localHostClause = '(localhost)';\nconst portClause = '(:\\\\d{1,5})';\nconst hostClause = '((' + domainBodyClause + '\\\\.' + tldClause + ')|' + ipClause + '|' + localHostClause + ')' + portClause + '?';\nconst pathCharacterSet = '(\\\\/[\\\\/\\\\w\\\\.\\\\-%~:+]*)*([^:\"\\'\\\\s])';\nconst pathClause = '(' + pathCharacterSet + ')?';\nconst queryStringHashFragmentCharacterSet = '[0-9\\\\w\\\\[\\\\]\\\\(\\\\)\\\\/\\\\?\\\\!#@$%&\\'*+,:;~\\\\=\\\\.\\\\-]*';\nconst queryStringClause = '(\\\\?' + queryStringHashFragmentCharacterSet + ')?';\nconst hashFragmentClause = '(#' + queryStringHashFragmentCharacterSet + ')?';\nconst negatedPathCharacterSet = '[^\\\\/\\\\w\\\\.\\\\-%]+';\nconst bodyClause = hostClause + pathClause + queryStringClause + hashFragmentClause;\nconst start = '(?:^|' + negatedDomainCharacterSet + ')(';\nconst end = ')($|' + negatedPathCharacterSet + ')';\nconst strictUrlRegex = new RegExp(start + protocolClause + bodyClause + end);\n\nfunction handleLink(event: MouseEvent, uri: string): void {\n  const newWindow = window.open();\n  if (newWindow) {\n    newWindow.opener = null;\n    newWindow.location.href = uri;\n  } else {\n    console.warn('Opening link blocked as opener could not be cleared');\n  }\n}\n\nexport class WebLinksAddon implements ITerminalAddon {\n  private _linkMatcherId: number | undefined;\n  private _terminal: Terminal | undefined;\n  private _linkProvider: IDisposable | undefined;\n\n  constructor(\n    private _handler: (event: MouseEvent, uri: string) => void = handleLink,\n    private _options: ILinkMatcherOptions = {},\n    private _useLinkProvider: boolean = false\n  ) {\n    this._options.matchIndex = 1;\n  }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n\n    if (this._useLinkProvider && 'registerLinkProvider' in this._terminal) {\n      this._linkProvider = this._terminal.registerLinkProvider(new WebLinkProvider(this._terminal, strictUrlRegex, this._handler));\n    } else {\n      // TODO: This should be removed eventually\n      this._linkMatcherId = (this._terminal as Terminal).registerLinkMatcher(strictUrlRegex, this._handler, this._options);\n    }\n  }\n\n  public dispose(): void {\n    if (this._linkMatcherId !== undefined && this._terminal !== undefined) {\n      this._terminal.deregisterLinkMatcher(this._linkMatcherId);\n    }\n\n    this._linkProvider?.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkProvider, IBufferCellPosition, ILink, Terminal, IBuffer } from 'xterm';\n\nexport class WebLinkProvider implements ILinkProvider {\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _regex: RegExp,\n    private readonly _handler: (event: MouseEvent, uri: string) => void\n  ) {\n\n  }\n\n  provideLink(position: IBufferCellPosition, callback: (link: ILink | undefined) => void): void {\n    callback(LinkComputer.computeLink(position, this._regex, this._terminal, this._handler));\n  }\n}\n\nexport class LinkComputer {\n  public static computeLink(position: IBufferCellPosition, regex: RegExp, terminal: Terminal, handler: (event: MouseEvent, uri: string) => void): ILink | undefined {\n    const rex = new RegExp(regex.source, (regex.flags || '') + 'g');\n\n    const [line, startLineIndex] = LinkComputer._translateBufferLineToStringWithWrap(position.y - 1, false, terminal);\n\n    let match;\n    let stringIndex = -1;\n\n    while ((match = rex.exec(line)) !== null) {\n      const text = match[1];\n      if (!text) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        console.log('match found without corresponding matchIndex');\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = line.indexOf(text, stringIndex + 1);\n      rex.lastIndex = stringIndex + text.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      let endX = stringIndex + text.length;\n      let endY = startLineIndex + 1;\n\n      while (endX > terminal.cols) {\n        endX -= terminal.cols;\n        endY++;\n      }\n\n      const range = {\n        start: {\n          x: stringIndex + 1,\n          y: startLineIndex + 1\n        },\n        end: {\n          x: endX,\n          y: endY\n        }\n      };\n\n      return { range, text, activate: handler };\n    }\n  }\n\n  /**\n   * Gets the entire line for the buffer line\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param terminal The terminal\n   */\n  private static _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean, terminal: Terminal): [string, number] {\n    let lineString = '';\n    let lineWrapsToNext: boolean;\n    let prevLinesToWrap: boolean;\n\n    do {\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n\n      if (line.isWrapped) {\n        lineIndex--;\n      }\n\n      prevLinesToWrap = line.isWrapped;\n    } while (prevLinesToWrap);\n\n    const startLineIndex = lineIndex;\n\n    do {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n      lineString += line.translateToString(!lineWrapsToNext && trimRight).substring(0, terminal.cols);\n      lineIndex++;\n    } while (lineWrapsToNext);\n\n    return [lineString, startLineIndex];\n  }\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body\n});\n\nexport default app;\n"]}