{"id":"../node_modules/xterm/lib/utils/DomElementObjectPool.js","dependencies":[{"name":"/Users/andybarnov/code/progapandist/rnd/webterm/node_modules/xterm/lib/utils/DomElementObjectPool.js.map","includedInParent":true,"mtime":1587222920480},{"name":"/Users/andybarnov/code/progapandist/rnd/webterm/node_modules/xterm/src/utils/DomElementObjectPool.ts","includedInParent":true,"mtime":1587222920480},{"name":"/Users/andybarnov/code/progapandist/rnd/webterm/package.json","includedInParent":true,"mtime":1587223993374},{"name":"/Users/andybarnov/code/progapandist/rnd/webterm/node_modules/xterm/package.json","includedInParent":true,"mtime":1586604134482}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DomElementObjectPool = (function () {\n    function DomElementObjectPool(type) {\n        this.type = type;\n        this._type = type;\n        this._pool = [];\n        this._inUse = {};\n    }\n    DomElementObjectPool.prototype.acquire = function () {\n        var element;\n        if (this._pool.length === 0) {\n            element = this._createNew();\n        }\n        else {\n            element = this._pool.pop();\n        }\n        this._inUse[element.getAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE)] = element;\n        return element;\n    };\n    DomElementObjectPool.prototype.release = function (element) {\n        if (!this._inUse[element.getAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE)]) {\n            throw new Error('Could not release an element not yet acquired');\n        }\n        delete this._inUse[element.getAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE)];\n        this._cleanElement(element);\n        this._pool.push(element);\n    };\n    DomElementObjectPool.prototype._createNew = function () {\n        var element = document.createElement(this._type);\n        var id = DomElementObjectPool._objectCount++;\n        element.setAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE, id.toString(10));\n        return element;\n    };\n    DomElementObjectPool.prototype._cleanElement = function (element) {\n        element.className = '';\n        element.innerHTML = '';\n    };\n    return DomElementObjectPool;\n}());\nDomElementObjectPool.OBJECT_ID_ATTRIBUTE = 'data-obj-id';\nDomElementObjectPool._objectCount = 0;\nexports.DomElementObjectPool = DomElementObjectPool;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/utils/DomElementObjectPool.ts"],"names":[],"mappings":";;AASA;IAYE,8BAAoB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAKM,sCAAO,GAAd;QACE,IAAI,OAAoB,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC,GAAG,OAAO,CAAC;QACtF,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAQM,sCAAO,GAAd,UAAe,OAAoB;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACnE,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAKO,yCAAU,GAAlB;QACE,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAM,EAAE,GAAG,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAC/C,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAChF,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAMO,4CAAa,GAArB,UAAsB,OAAoB;QACxC,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;QACvB,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;IACzB,CAAC;IACH,2BAAC;AAAD,CAjEA,AAiEC;AAhEyB,wCAAmB,GAAG,aAAa,CAAC;AAE7C,iCAAY,GAAG,CAAC,CAAC;AAHrB,oDAAoB","file":"DomElementObjectPool.js","sourceRoot":"..","sourcesContent":["/**\n * @module xterm/utils/DomElementObjectPool\n * @license MIT\n */\n\n/**\n * An object pool that manages acquisition and releasing of DOM elements for\n * when reuse is desirable.\n */\nexport class DomElementObjectPool {\n  private static readonly OBJECT_ID_ATTRIBUTE = 'data-obj-id';\n\n  private static _objectCount = 0;\n\n  private _type: string;\n  private _pool: HTMLElement[];\n  private _inUse: {[key: string]: HTMLElement};\n\n  /**\n   * @param type The DOM element type (div, span, etc.).\n   */\n  constructor(private type: string) {\n    this._type = type;\n    this._pool = [];\n    this._inUse = {};\n  }\n\n  /**\n   * Acquire an element from the pool, creating it if the pool is empty.\n   */\n  public acquire(): HTMLElement {\n    let element: HTMLElement;\n    if (this._pool.length === 0) {\n      element = this._createNew();\n    } else {\n      element = this._pool.pop();\n    }\n    this._inUse[element.getAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE)] = element;\n    return element;\n  }\n\n  /**\n   * Release an element back into the pool. It's up to the caller of this\n   * function to ensure that all external references to the element have been\n   * removed.\n   * @param element The element being released.\n   */\n  public release(element: HTMLElement): void {\n    if (!this._inUse[element.getAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE)]) {\n      throw new Error('Could not release an element not yet acquired');\n    }\n    delete this._inUse[element.getAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE)];\n    this._cleanElement(element);\n    this._pool.push(element);\n  }\n\n  /**\n   * Creates a new element for the pool.\n   */\n  private _createNew(): HTMLElement {\n    const element = document.createElement(this._type);\n    const id = DomElementObjectPool._objectCount++;\n    element.setAttribute(DomElementObjectPool.OBJECT_ID_ATTRIBUTE, id.toString(10));\n    return element;\n  }\n\n  /**\n   * Resets an element back to a \"clean state\".\n   * @param element The element to be cleaned.\n   */\n  private _cleanElement(element: HTMLElement): void {\n    element.className = '';\n    element.innerHTML = '';\n  }\n}\n"]}},"error":null,"hash":"398317e4a3c7ba5684d0c6864871e23c","cacheData":{"env":{}}}